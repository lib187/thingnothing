# 1. 代码仓目前使用什么？
  毫无疑问git，svn无法离线，有网络问题或者仓库迁移后无法查看日志。代码最重要的就是提交记录的日志。特别是代码量多的时候，没有细分的提交记录，基本无法系统的阅读，这点从linux的内核源码就可以知道，
  最新版本的内核源码根本不是个人可以全部读完的，学习的都是早期的内核版本。
# 2. 如果以前用的是svn，如何迁移到git？需要保存当时的提交记录，不要再手动提交（工作量无穷大，也浪费时间）
  https://my.oschina.net/u/199525/blog/1556989
  
# 3. 如何将当前git仓库的代码从提交到另外一个仓？必须包括提交历史
  https://segmentfault.com/a/1190000004326399
  
# 4. 使用fork的方式进行开发，如何合入到原始仓库中？
---------------------
    简单的说就是：
    1. 给fork配置远程库
      1.1 查看远程状态，
        git remote -v
      1.2 确定一个将被同步给 fork 远程的上游仓库
        git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
      1.3再次查看状态确认是否配置成功。
        git remote -v

    2.同步fork, 从上游仓库 fetch 分支和提交点，提取给本地 master，并会被存储在一个本地分支 upstream/master，可以使用git branch -a 查看
      git fetch upstream

    3. 把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。
      3.1 git checkout master   			切换到本地master分支
      3.2 git merge upstream/master  	把 upstream/master 分支合并到本地 master。
      3.3 也可以使用git pull upstream master替换3.2的操作
      3.4 如果是将两个不相干的库合入(将旧仓库的代码和提交记录放到新的仓库中)会提示"fatal: refusing to merge unrelated histories", 需要在上面一步后面加上--allow-unrelated-histories。
          e.g. 
             lib187@libaosPC MINGW64 /f/git_test/test_merge (master)
             $ git pull  base_stream master --allow-unrelated-histories

    4.git push origin master  更新到 GitHub 的 fork 上
---------------------
